class MusicSwitcher07 : SwitchableDecoration
{
	Default
	{
		Radius 16;
		Height 16;
		+SPAWNCEILING
		+NOGRAVITY
	}
	States
	{
	Spawn:
		TNT1 A 1;
	Inactive:
		TNT1 A -1 A_StopSound(CHAN_VOICE);
		Stop;
	Active:
		TNT1 A -1 A_PlaySound("music07",CHAN_VOICE,1.0,0,ATTN_NONE);
		Stop;
	}
}

class HLTeleportFog : TeleportFog replaces TeleportFog
{
	Default
	{
		RenderStyle "Add";
		Alpha .6;
	}
	States
	{
	Spawn:
		HTEL AB 2 Bright LIGHT("TeleportFogLth1");
		HTEL C 2 Bright LIGHT("TeleportFogLth2");
		HTEL D 2 Bright LIGHT("TeleportFogLth3");
		HTEL EF 2 Bright LIGHT("TeleportFogLth4");
		HTEL GH 2 Bright LIGHT("TeleportFogLth5");
		HTEL IJ 2 Bright LIGHT("TeleportFogLth6");
		HTEL K 2 Bright LIGHT("TeleportFogLth7");
		HTEL LMN 2 Bright LIGHT("TeleportFogLth6");
		HTEL OP 2 Bright LIGHT("TeleportFogLth5");
		HTEL QR 2 Bright LIGHT("TeleportFogLth4");
		HTEL ST 2 Bright LIGHT("TeleportFogLth3");
		HTEL UV 2 Bright LIGHT("TeleportFogLth2");
		HTEL WXY 2 Bright LIGHT("TeleportFogLth1");
		Stop;
	}
}

class Debris01 : Actor
{
	Default
	{
		Radius 7;
		Height 7;
		Mass 5;
		RenderStyle "Add";
		+FORCEXYBILLBOARD
		PROJECTILE;
	}
	States
	{
	Spawn:
		DEBA A 2 NODELAY {self.frame=random(0,4);}
		DEBA # 2 A_FadeOut;
		Wait;
	}
}

//===============
// Blood & Gibs
//===============

class NewMeat : Actor
{
	Default
	{
		radius 6;
		height 5;
		+DROPOFF
		+NOTELEPORT
		+CORPSE
		+CANNOTPUSH
	}
	States
	{
	Spawn:
		MEAT A 0 NODELAY {self.frame=random(0,19);}
		MEAT # 2 A_SpawnItemEx("GibBloodTrailMediumSize",random(3,-3),random(3,-3),random(3,-3),zvel:frandom(-.25,-1),flags:SXF_TRANSFERTRANSLATION);
		Wait;
	Crash:
		MEAT # 350;
		MEAT # 1 A_FadeOut;
		Wait;
	}
	void A_GibTrail()
		{A_SpawnItemEx("GibBloodTrailMediumSize",random(3,-3),random(3,-3),random(3,-3),zvel:frandom(-.25,-1),SXF_TRANSFERTRANSLATION);}
}

class NewBlood : Blood replaces Blood
{
	Default
	{
		Scale .15;
		Gravity .44;
		+DONTSPLASH
		+DONTBLAST
		+CANNOTPUSH
	}
	States
	{
	Spawn:
		BLD1 A 1;
		TNT1 AAA 0 A_SpawnItemEx("ExtraBlood",random(3,-3),random(3,-3),random(3,-3),1,0,frandom(1.25,3),random(1,359),SXF_TRANSFERTRANSLATION);
		BLD1 ABCD 6;
		Stop;
	}
}

class ExtraBlood : NewBlood
{
	Default
	{
		Scale .09;
	}
	States
	{
	Spawn:
		BLD1 A 12;
		BLD1 BCD 6;
		Stop;
	}
}

class GibBloodTrailMediumSize : ExtraBlood
{
	Default
	{
		RenderStyle "Translucent";
		Gravity .3;
		+NOINTERACTION
		Scale .12;
		+RANDOMIZE
	}
}

class XenBlood : Blood
{
	Default
	{
		Scale .15;
		Gravity .44;
		+DONTSPLASH
		+DONTBLAST
		+CANNOTPUSH
	}
	States
	{
	Spawn:
		BLD1 ABCD 6;
		Stop;
	}
}

class BloodGibDropper : Actor
{
	Default
	{
		Projectile;
	}
	States
	{
	Spawn:
		TNT1 A 1 NODELAY
		{
			if(CheckIfSeen())
			{
				NewMeat(4);
				BloodGib(1,1,1,1);
			}
			else
			{
				NewMeat(16);
				switch(random(1,4))
				{
				case 1:BloodGib(2,2,3,1);break;
				case 2:BloodGib(2,2,2,2);break;
				case 3:BloodGib(1,2,3,2);break;
				case 4:BloodGib(2,1,2,3);break;
				}
			}
		}
		Stop;
	}
	void NewMeat(int cnt)
	{
		for(int i=0;i<cnt;i++)
			A_SpawnItemEx("NewMeat",0,0,0,random(-7,7),random(-7,7),random(1,14),random(1,359),SXF_TRANSFERTRANSLATION);
	}
	void BloodGib(int gib1,int gib2,int gib3,int gib4)
	{
		int i;
		for(i=0;i<gib1;i++)
			SpawnBloodGib("BloodGib1");
		for(i=0;i<gib2;i++)
			SpawnBloodGib("BloodGib2");
		for(i=0;i<gib3;i++)
			SpawnBloodGib("BloodGib3");
		for(i=0;i<gib4;i++)
			SpawnBloodGib("BloodGib4");
	}
	private void SpawnBloodGib(class<actor> gib)
		{A_SpawnItemEx(gib,xvel:random(-5,5),zvel:frandom(.75,5),angle:random(1,359),flags:SXF_TRANSFERTRANSLATION);}
}

//***************************************
class BloodGib1 : NewMeat
{
	Default
	{
		scale .6;
	}
	states
	{
	Spawn:
		ANYG AABBCCDD 2 A_GibTrail;
		Loop;
	Crash:
		ANYG E 450 A_NoBlocking;
		ANYG E 1 A_FadeOut;
		Wait;
	}
}

class BloodGib2 : BloodGib1		//eye
{
	Default
	{
		scale .4;
	}
	states
	{
	Spawn:
		ANYG FFGGHHII 2 A_GibTrail;
		Loop;
	Crash:
		ANYG J 560 A_NoBlocking;
		ANYG J 1 A_FadeOut;
		Wait;
	}
}

class BloodGib3 : BloodGib1		//liver
{
	states
	{
	Spawn:
		ANYG KKLLMMNN 2 A_GibTrail;
		Loop;
	Crash:
		ANYG O 400 A_NoBlocking;
		ANYG O 1 A_FadeOut;
		Wait;
	}
}

class BloodGib4 : BloodGib1		//bloodthing
{
	states
	{
	Spawn:
		ANYG PPQQRRSS 2 A_GibTrail;
		Loop;
	Crash:
		ANYG T 500 A_NoBlocking;
		ANYG T 1 A_FadeOut;
		Wait;
	}
}

class XenGibs : Actor
{
	Default
	{
		Mass 100;
		radius 6;
		height 5;
		+DROPOFF
		+NOTELEPORT
		+CORPSE
		+CANNOTPUSH
		Translation "176:191=[222,254,114]:[43,55,0]";
	}
	states
	{
	Spawn:
		HLI1 A 0 NODELAY {self.frame=random(0,5);}
		HLI1 "#" 2
		{
			bool num;
			actor bld;
			[num,bld]=A_SpawnItemEx("XenBlood",random(3,-3),random(3,-3),random(3,-3),flags:SXF_TRANSFERTRANSLATION);
			if(scale.x==2)
				bld.scale=(.5,.5);
			else if(scale.x==.75)
				bld.scale=(.06,.06);
			else
				A_SpawnItemEx("ExtraBlood",random(3,-3),random(3,-3),random(3,-3),1,0,0,random(1,359),SXF_TRANSFERTRANSLATION);
		}
		Wait;
	Crash:
		"####" # 300;
		"####" # 2 A_FadeOut;
		Wait;
	}
}

class XenGibsRed : XenGibs
{
	Default
	{
		Mass 5;
		scale .12;
	}
	states
	{
	Spawn:
		RGIB A -1 NODELAY {self.frame=random(0,7);}
		Stop;
	}
}