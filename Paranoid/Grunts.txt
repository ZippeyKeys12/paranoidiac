//====================================
// Government Troops: Random Selector
//====================================

class HLGruntM16NoGrenades : RandomSpawner
{
	Default
	{
		DropItem "HLGrunt1";
		DropItem "HLGrunt2";
		DropItem "HLGrunt3";
	}
}

class HLGruntShotgunNoGrenade : RandomSpawner
{
	override void PostSpawn(Actor spawned)
	{
		let me=HLGrunt1(spawned);
		me.shotgun=1;
	}
	Default
	{
		DropItem "HLGrunt4";
		DropItem "HLGrunt5";
		DropItem "HLGrunt6";
	}
}

class HLGruntNoGrenadesAny : RandomSpawner
{
	Default
	{
		DropItem "HLGruntM16NoGrenades";
		DropItem "HLGruntShotgunNoGrenade";
	}
}

class HLGruntM16 : HLGruntM16NoGrenades
{
	override void PostSpawn(Actor spawned)
	{
		let me=HLGrunt1(spawned);
		me.handgren=1;
	}
}

class HLGruntShotgun : HLGruntShotgunNoGrenade
{
	override void PostSpawn(Actor spawned)
	{
		let me=HLGrunt1(spawned);
		me.shotgun=1;
		me.handgren=1;
	}
}

class HLGruntAny : RandomSpawner
{
	Default
	{
		DropItem "HLGruntM16";
		DropItem "HLGruntShotgun";
	}
}

//==========================================
// Government Troops: M16 & Grenade Attack
//==========================================
class HLGrunt1 : HLMonster
{
	bool closegrencheck,shotgun,handgren;
	int GrenTimeCounter;
	Default
	{
		Health 150;
		Speed 3.5;
		Height 63;
		maxdropoffheight 128;
		DamageFactor "SoldierDamage",0;
		SeeSound "halflife/monsters/humangrunt/sight";
		PainSound "halflife/monsters/humangrunt/pain";
		DeathSound "halflife/monsters/humangrunt/death";
		ActiveSound "halflife/monsters/humangrunt/active";
		Species "HLGrunt";
		Mass 200;
		PainChance 64;
		PainChance "Crowbar",210;
	}
	States
	{
	Spawn:
		HLI1 ABCDEFGHIJK 2 A_Look;
		Loop;
	See:
		HLR1 A 0
		{
			if(closegrencheck)
			{
				bFRIGHTENED=1;
				if(GrenTimeCounter>=4)
				{
					closegrencheck=0;
					GrenTimeCounter-=4;
					bFRIGHTENED=0;
				}
				else
				{
					GrenTimeCounter++;
					return ResolveState("Flee");
				}
			}
			if(CheckIfCloser(target,300))
				return ResolveState("Walking");
			A_SetSpeed(3.5);
			return state(null);
		}
		HLR1 A 1 A_GruntChase;
		HLR1 B 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLR1 C 1 A_GruntChase;
		HLR1 D 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLR1 E 1 A_GruntChase;
		HLR1 F 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLR1 G 1 A_GruntChase;
		HLR1 H 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLR1 I 1 A_GruntChase;
		HLR1 J 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLR1 K 1 A_GruntChase;
		HLR1 L 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLR1 M 1 A_GruntChase;
		HLR1 N 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLR1 O 1 A_GruntChase;
		HLR1 P 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLR1 Q 1 A_GruntChase;
		HLR1 R 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLR1 S 1 A_GruntChase;
		HLR1 T 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLR1 U 1 A_GruntChase;
		HLR1 V 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLR1 W 1 A_GruntChase;
		HLR1 XY 1 A_Chase(null,null,HLSMOOTHCHASE);
		Loop;
	Walking:
		HLW1 A 0
		{
			bMISSILEEVENMORE=1;
			bMISSILEMORE=1;
			A_SetSpeed(1.75);
		}
		HLW1 A 1 A_GruntChase;
		HLW1 BCD 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLW1 E 1 A_GruntChase;
		HLW1 FGH 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLW1 I 1 A_GruntChase;
		HLW1 JKL 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLW1 M 1 A_GruntChase;
		HLW1 NOP 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLW1 Q 1 A_GruntChase;
		HLW1 RST 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLW1 U 1 A_GruntChase;
		HLW1 VWX 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLW1 X 0 A_KeepWalking;
		HLW1 Y 1 A_GruntChase;
		HLW1 Z[\ 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLW1 ] 1 A_GruntChase;
		HLW2 ABC 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLW2 D 1 A_GruntChase;
		HLW2 EFG 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLW2 H 1 A_GruntChase;
		HLW2 IJK 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLW2 L 1 A_GruntChase;
		HLW2 MNO 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLW2 P 1 A_GruntChase;
		HLW2 QRS 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLW2 S 0 A_KeepWalking;
		HLW2 T 1 A_GruntChase;
		HLW2 UVW 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLW2 X 1 A_GruntChase;
		HLW2 YZ[ 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLW2 \ 1 A_GruntChase;
		HLW2 ] 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLW3 AB 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLW3 C 1 A_GruntChase;
		HLW3 DEF 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLW3 G 1 A_GruntChase;
		HLW3 HIJ 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLW3 K 1 A_GruntChase;
		HLW3 LMN 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLW3 N 0 A_KeepWalking;
		HLW3 O 1 A_GruntChase;
		HLW3 PQR 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLW3 S 1 A_GruntChase;
		HLW3 TUV 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLW3 W 1 A_GruntChase;
		HLW3 XYZ 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLW3 [ 1 A_GruntChase;
		HLW3 \ 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLW3 \ 0 A_KeepWalking;
		Goto See;
	Flee:
		HLR1 A 0 A_SetSpeed(3.5);
		HLR1 A 1 A_Chase(null,null);
		HLR1 B 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLR1 C 1 A_Chase(null,null);
		HLR1 D 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLR1 E 1 A_Chase(null,null);
		HLR1 F 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLR1 G 1 A_Chase(null,null);
		HLR1 H 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLR1 I 1 A_Chase(null,null);
		HLR1 J 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLR1 K 1 A_Chase(null,null);
		HLR1 L 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLR1 M 1 A_Chase(null,null);
		HLR1 N 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLR1 O 1 A_Chase(null,null);
		HLR1 P 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLR1 Q 1 A_Chase(null,null);
		HLR1 R 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLR1 S 1 A_Chase(null,null);
		HLR1 T 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLR1 U 1 A_Chase(null,null);
		HLR1 V 1 A_Chase(null,null,HLSMOOTHCHASE);
		HLR1 W 1 A_Chase(null,null);
		HLR1 XY 1 A_Chase(null,null,HLSMOOTHCHASE);
		Goto See;
	Melee:
		HLA1 ABCDEFGHIJKLMNOPQRSTUVWXYZ[\] 1 A_FaceTarget;
		HLA2 ABCDE 1 A_FaceTarget;
		HLA2 F 1
		{
			actor gren=A_SpawnProjectile("GruntHandGrenade",40);
			if(CheckMeleeRange())
			{
				closegrencheck=1;
				if(gren!=null)
					gren.vel.x=10;
			}
		}
		HLA2 GHIJKLMNOPQRSTUVWXYZ[ 1;
		Goto See;
	Missile:
		HLA2 K 1
		{
			if(shotgun)
			{
				if(random(0,255)<200)
					return resolvestate("Shotgun");
				if(handgren&&CheckIfCloser(target,600)&&!CheckIfCloser(target,256))
					return resolvestate("Grenade");
				return resolvestate("Shotgun");
			}
			else
			{
				if(random(0,255)<200)
					return resolvestate("Assault");
				if(CheckIfCloser(target,600))
				{
					if(!CheckIfCloser(target,256))
					{
						if(random(0,255)<64)
							return resolvestate("GrenadeGun");
						if(handgren)
							return resolvestate("Melee");
					}
					return resolvestate("Assault");
				}
				if(CheckIfCloser(target,1000))
					return resolvestate("GrenadeGun");
				return resolvestate("Assault");
			}
			return state(null);
		}
		Wait;
	Assault:
		HLA3 KKKK 3 A_FaceTarget;
		HLA3 K 0 A_FaceTarget;
		HLA2 \ 1 Light("ImShootingAGun") A_GruntGunshot(1);
		HLA2 ] 1;
		HLA3 AB 1;
		HLA3 B 0 A_Jump(15,"See");
		HLA3 B 0 A_CposRefire;
		Goto Assault+4;
	Shotgun:
		HLA3 KKKK 3 A_FaceTarget;
		HLA3 K 0 A_Jump(64,"ShotgunDouble");
		HLA3 KKK 4 A_FaceTarget;
		HLA2 \ 1 Light("ImShootingAGun") A_GruntGunshot(5);
		HLA2 ] 1;
		HLA3 K 16;
		HLA3 K 0 A_Jump(40,"See");
		HLA3 K 0 A_CposRefire;
		Goto Shotgun+2;
	ShotgunDouble:
		HLA3 KKKKK 4 A_FaceTarget;
		HLA2 \ 1 Light("ImShootingAGun") A_GruntGunshot(10);
		HLA2 ] 1;
		HLA3 K 16;
		HLA3 KKK 4 A_FaceTarget;
		HLA3 K 0 A_Jump(100,"See");
		HLA3 K 0 A_CposRefire;
		Loop;
	GrenadeGun:
		HLA3 LMNOPQRSTUVWXYZ[\] 1 A_FaceTarget;
		HLA4 ABCDEFGHIJ 1 A_FaceTarget;
		HLA4 K 1 Light("ImShootingAGun")
		{
			A_PlaySound("halflife/weapons/grenadelaunch",5);
			A_GruntGunsmoke();
			actor gren=A_SpawnProjectile("HLGruntGunGrenade",38);
			if(gren!=null)
			{
				if(CheckIfCloser(target,500))
					gren.vel.z+=1.25;
				else
					gren.vel.z+=3.5;
			}
		}
		HLA4 LMNOPQRSTUVWXYZ[ 1;
		Goto See;
	Pain:
		HLP1 A 1
		{
			A_Pain();
			if(closegrencheck)
				GrenTimeCounter++;
		}
		HLP1 BCDEFGH 1;
		Goto See;
	Death:
		HLD1 A 1
		{
			A_Scream();
			if(shotgun)
				A_DropItem("ShotgunPickup");
			else
				A_DropItem("M16Pickup");
			bSolid=0;
		}
		HLD1 BCDEFGHIJKLMNOPQRSTUVWXYZ[\] 1;
		HLD2 A 1 A_PlaySound("halflife/weapons/bodydrop");
		HLD2 BCDEF 1;
		HLD2 G -1;
		Stop;
	XDeath:
		TNT1 A 0 A_XenGibs(1);
		Stop;
	}
	void A_GruntChase()
	{
		if(handgren)
			A_Chase();
		else
			A_Chase(null,"Missile");
	}
	state A_KeepWalking()
	{
		if(!CheckIfCloser(target,300))
		{
			bMISSILEEVENMORE=0;
			bMISSILEMORE=0;
			return ResolveState("See");
		}
		return state(null);
	}
	void A_GruntGunshot(int shots)
	{
		if(shots==1)
		{
			A_PlaySound("halflife/weapons/machinegunshot",5);
			A_GruntGunsmoke("GunSmallSmoke");
		}
		else
		{
			if(shots==5)
				A_PlaySound("halflife/weapons/shotgunsingle",5);
			else if(shots==10)
				A_PlaySound("halflife/weapons/shotgundouble",5);
			A_GruntGunsmoke();
		}
		A_CustomBulletAttack(7,7,shots,4,"NewPuff2");
	}
	void A_GruntGunsmoke(class<actor> smoke="GunSmoke")
	{
		for(int i=0;i<2;i++)
			A_SpawnItemEx(smoke,35,3,49);
	}
}
class HLGrunt2 : HLGrunt1{}
class HLGrunt3 : HLGrunt1{}
class HLGrunt4 : HLGrunt1{}
class HLGrunt5 : HLGrunt1{}
class HLGrunt6 : HLGrunt1{}

//********************************************
class GruntHandGrenade : Actor
{
	int GrenTimeCounter;
	Default
	{
		Mass 1;
		Radius 3;
		Height 6;
		Speed 20;
		Scale .3;
		Damage 1;
		Damagetype "SoldierDamage";
		PROJECTILE;
		BounceType "Doom";
		+CANBOUNCEWATER
		BounceFactor .6;
		-NOGRAVITY
		Gravity .5;
	}
	States
	{
	Spawn:
		HGN1 ABCDE 2;
		TNT1 A 0 {GrenTimeCounter++;}
		TNT1 A 0 A_JumpIf(GrenTimeCounter>=9,"Explode");
		Loop;
	Death:
		HGN1 A 10;
		TNT1 A 0 {GrenTimeCounter++;}
		TNT1 A 0 A_JumpIf(GrenTimeCounter>=9,"Explode");
		Loop;
	Explode:
		TNT1 A 10
		{
			A_PlaySound("halflife/weapons/explode1");
			A_Explode(128,64);
			A_SpawnItemEx("NewExplosionMedium");
		}
		Stop;
	}
}

//********************************************
class HLGruntGunGrenade : M16Grenade
{
	Default
	{
		Damagetype "SoldierDamage";
		Gravity .2;
		DeathSound "halflife/weapons/explode1";
		Decal "";
	}
	States
	{
	Death:
		TNT1 A 1
		{
			A_Explode(64);
			A_SpawnItemEx("NewExplosionMedium");
		}
		Stop;
	}
}

class HLGrunt1Dead : Actor
{
	States
	{
	Spawn:
		TNT1 A 0;
		HLD2 G -1;
		Stop;
	}
}