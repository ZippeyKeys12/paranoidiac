#library "PARANOID"
#include "zcommon.acs"

str debris[11]={"debris01","debris02","debris03","debris04","debris05","debris06","debris07","debris08","debris09","debris10","debris11"};

//////////////////////////////
// Script 729-730: Bubbles	//
//////////////////////////////

str Bubble[5] ={"Bubble1","Bubble2","Bubble3","Bubble4","Bubble5"};

script 729 (void)
{
	int r = random(0,65536);
	SetActorAngle(0, GetActorAngle(0) + 0.125);
	SetActorPosition(0,
		GetActorX(0) + FixedMul(cos(GetActorAngle(0)), r),
		GetActorY(0) + FixedMUl(sin(GetActorAngle(0)), r),
		GetActorZ(0),0);
}

script 730 (int area, int intensity, int shape)
{
	int i, a, r;
	area += random(0, 8);
	intensity += 1;
	switch (shape)
	{
	case 0:	//square
		area /= 2;
		area <<= 16;
		for (i=0; i<intensity; i++)
			Spawn(Bubble[random(0, 4)],
				GetActorX(0) + random(-area, area),
				GetActorY(0) + random(-area, area),
				GetActorZ(0),0,random(0, 255));
		break;
	case 1:	//circle
		area /= 2;
		area <<= 16;
		for (i=0; i<intensity; i++)
		{
			r = random(0, area);
			a = random(0,65536);
			Spawn(Bubble[random(0, 4)],
				GetActorX(0) + FixedMul(cos(a), r),
				GetActorY(0) + FixedMul(sin(a), r),
				GetActorZ(0),0,a >> 8);
		}
		break;
	case 2:	//line
		area <<= 16;
		for (i=0; i<intensity; i++)
		{
			r = random(0, area);
			Spawn(Bubble[random(0, 4)],
				GetActorX(0) + FixedMul(cos(GetActorAngle(0)), r),
				GetActorY(0) + FixedMul(sin(GetActorAngle(0)), r),
				GetActorZ(0),0,GetActorAngle(0) >> 8);
		}
		break;
  }
}

//////////////////////////
// Script 777: Flames	//
//////////////////////////

#define FIRE_CIRCLE     0
#define FIRE_SQUARE     1
#define FIRE_LINE       2

#define FIRE_TID        -16384
#define GLOW_TID        -16383
#define EMBER_TID       -16382

#define GLOW_NONE       0
#define GLOW_GROUND     1
#define GLOW_RAISE      2
#define GLOW_BOTH       3

#define FIRE_SPEED_LOW  8
#define FIRE_SPEED_HIGH 12

str Flame[30][3] =
{
	{"Flame1A_0.1", "Flame1A_0.2", "Flame1A_0.3"},
	{"Flame1B_0.1", "Flame1B_0.2", "Flame1B_0.3"},
	{"Flame2A_0.1", "Flame2A_0.2", "Flame2A_0.3"},
	{"Flame2B_0.1", "Flame2B_0.2", "Flame2B_0.3"},
	{"Flame3A_0.1", "Flame3A_0.2", "Flame3A_0.3"},
	{"Flame3B_0.1", "Flame3B_0.2", "Flame3B_0.3"},
	{"Flame4A_0.1", "Flame4A_0.2", "Flame4A_0.3"},
	{"Flame4B_0.1", "Flame4B_0.2", "Flame4B_0.3"},
	{"Flame5A_0.1", "Flame5A_0.2", "Flame5A_0.3"},
	{"Flame5B_0.1", "Flame5B_0.2", "Flame5B_0.3"},
	{"Flame6A_0.1", "Flame6A_0.2", "Flame6A_0.3"},
	{"Flame6B_0.1", "Flame6B_0.2", "Flame6B_0.3"},
	{"Flame7A_0.1", "Flame7A_0.2", "Flame7A_0.3"},
	{"Flame7B_0.1", "Flame7B_0.2", "Flame7B_0.3"},
	{"Flame8A_0.1", "Flame8A_0.2", "Flame8A_0.3"},
	{"Flame8B_0.1", "Flame8B_0.2", "Flame8B_0.3"},
	{"Flame9A_0.1", "Flame9A_0.2", "Flame9A_0.3"},
	{"Flame9B_0.1", "Flame9B_0.2", "Flame9B_0.3"},
	{"Flame10A_0.1", "Flame10A_0.2", "Flame10A_0.3"},
	{"Flame10B_0.1", "Flame10B_0.2", "Flame10B_0.3"},
	{"Flame11A_0.1", "Flame11A_0.2", "Flame11A_0.3"},
	{"Flame11B_0.1", "Flame11B_0.2", "Flame11B_0.3"},
	{"Flame12A_0.1", "Flame12A_0.2", "Flame12A_0.3"},
	{"Flame12B_0.1", "Flame12B_0.2", "Flame12B_0.3"},
	{"Flame13A_0.1", "Flame13A_0.2", "Flame13A_0.3"},
	{"Flame13B_0.1", "Flame13B_0.2", "Flame13B_0.3"},
	{"Flame14A_0.1", "Flame14A_0.2", "Flame14A_0.3"},
	{"Flame14B_0.1", "Flame14B_0.2", "Flame14B_0.3"},
	{"Flame14A_0.1", "Flame14A_0.2", "Flame14A_0.3"},
	{"Flame14B_0.1", "Flame14B_0.2", "Flame14B_0.3"}
};

str FlameGlow[3] = {"FlameGlow_0.2", "FlameGLow_0.4", "FlameGlow_0.6"};

function void SpawnGlow (int x, int y, int z, int a, int s, int t, int glow)
{
	switch (glow)
	{
	case GLOW_GROUND:
		Spawn(FlameGlow[s], x, y, z, 0, a >> 8);
		break;
	case GLOW_RAISE:
		Spawn(FlameGlow[s], x, y, z, GLOW_TID, a >> 8);
		ThrustThingZ(GLOW_TID, t, 0, 0);
		Thing_ChangeTID(GLOW_TID, 0);
		break;
	case GLOW_BOTH:
		Spawn(FlameGlow[s], x, y, z, 0, a >> 8);
		Spawn(FlameGlow[s], x, y, z, GLOW_TID, a >> 8);
		ThrustThingZ(GLOW_TID, t, 0, 0);
		Thing_ChangeTID(GLOW_TID, 0);
		break;
	}
}

function void SpawnEmber (int x, int y, int z)
{
	if (!random(0, 64))
	{
		int a = random(0, 255);
		Spawn("Ember", x, y, z, EMBER_TID, a);
		ThrustThingZ(EMBER_TID, random(12, 24), 0, 0);
		ThrustThing(a, random(-2, 2)/2, 0, EMBER_TID);
		Thing_ChangeTID(EMBER_TID, 0);
	}
}

script 777 (int area, int shape, int glow)
{
	int a, r, x, y, s, t, i;
	switch (shape)
	{
	case FIRE_CIRCLE:
		for (i=0; i<area/32+1; i++)
		{
			a = random(0, 65535);
			r = random(0, (area / 2) << 16);
			s = random(0, 2);
			t = random(FIRE_SPEED_LOW, FIRE_SPEED_HIGH);
			x = GetActorX(0) + FixedMul(cos(a), r);
			y = GetActorY(0) + FixedMul(sin(a), r);
			Spawn(Flame[random(0, 29)][s], x, y, GetActorZ(0), FIRE_TID, a >> 8);
			ThrustThingZ(FIRE_TID, t, 0, 0);
			Thing_ChangeTID(FIRE_TID, 0);
			SpawnGlow(x, y, GetActorZ(0), a, s, t, glow);
			SpawnEmber(x, y, GetActorZ(0));
		}
		break;
	case FIRE_SQUARE:
		for (i=0; i<area/32+1; i++)
		{
			a = random(0, 65535);
			s = random(0, 2);
			t = random(FIRE_SPEED_LOW, FIRE_SPEED_HIGH);
			x = GetActorX(0) + random(-(area<<16)/2, (area<<16)/2);
			y = GetActorY(0) + random(-(area<<16)/2, (area<<16)/2);
			Spawn(Flame[random(0, 29)][s], x, y, GetActorZ(0), FIRE_TID, a >> 8);
			ThrustThingZ(FIRE_TID, t, 0, 0);
			Thing_ChangeTID(FIRE_TID, 0);
			SpawnGlow(x, y, GetActorZ(0), a, s, t, glow);
			SpawnEmber(x, y, GetActorZ(0));
		}
		break;
	case FIRE_LINE:
		for (i=0; i<area/32+1; i++)
		{
			a = GetActorAngle(0);
			r = random(0, area << 16);
			s = random(0, 2);
			t = random(FIRE_SPEED_LOW, FIRE_SPEED_HIGH);
			x = GetActorX(0) + FixedMul(cos(a), r);
			y = GetActorY(0) + FixedMul(sin(a), r);
			Spawn(Flame[random(0, 29)][s], x, y, GetActorZ(0), FIRE_TID, a >> 8);
			ThrustThingZ(FIRE_TID, t, 0, 0);
			Thing_ChangeTID(FIRE_TID, 0);
			SpawnGlow(x, y, GetActorZ(0), a, s, t, glow);
			SpawnEmber(x, y, GetActorZ(0));
		}
		break;
	}
}

function void hintmessage(str sound,str message,int holdtime)
{
	PlaySound(0,"radiostatic",6,1.0,0,ATTN_STATIC);
	PlaySound(0,sound,7,1.0,0,ATTN_STATIC);
	SetHUDSize(640,480,1);
	SetFont("HINTMAN");
	HUDMessage(s:"A";HUDMSG_PLAIN,1,CR_UNTRANSLATED,0.1,30.1,holdtime);
	SetFont("smallfont");
	HUDMessage(s:"\cCMessage From Controller:\n",s:message;HUDMSG_PLAIN|HUDMSG_LOG,2,CR_GOLD,80.1,30.1,holdtime);
}
//Hint messages that are run when player uses the inventory item "MessageItem**"

//Map02: Message 1
Script 501(void)
{
	hintmessage("MAP2VOX1","You'll need to reach Dr. Zimmerman, the Sector Administrator, \nto get the System Override code.",7.0);
	delay(8*35);
	PlaySound(0,"radiostatic",6,1.0,0,ATTN_STATIC);
}

//Map02: Message 2
//Map04: Message 4
Script 502(void)
{
	hintmessage("MAP2VOX2","Shoot the undamaged fuse to disable the laser barrier.",5.0);
	delay(6*35);
	PlaySound(0,"radiostatic",6,1.0,0,ATTN_STATIC);
}

//Map02: Message 3
Script 503(void)
{
	hintmessage("MAP2VOX3","Look for a gasoline can in the Fuel Room, \nwhich is near the Flow Control Room.",6.0);
	delay(7*35);
	PlaySound(0,"radiostatic",6,1.0,0,ATTN_STATIC);
}

//Map02: Message 4
Script 504(void)
{
	hintmessage("MAP2VOX4","Raise the crane and jump on it to ride it to the top. \n\nIf you miss, use the switch to lower the crane and try again.",9.0);
	delay(9*35);
	PlaySound(0,"radiostatic",6,1.0,0,ATTN_STATIC);
}

//Map03: Message 1
Script 505(void)
{
	hintmessage("MAP3VOX1","The security key is in Security Room B-102, \nwhich overlooks Storage Bay A2. \n\nUse the lift in Storage Bay A3 to reach the bridge \nover Storage Bay A2, which will take you to B-102.",18.0);
	delay(16*35);
	PlaySound(0,"radiostatic",6,1.0,0,ATTN_STATIC);
}

//Map03: Message 2
Script 506(void)
{
	hintmessage("MAP3VOX2","Find Hazardous Materials Bay B and exit to the East of the building. \n\nThe bay doors are operated from the control room overlooking HazMat Bay B. \n\nTo reach the control room, take the stairs from the Cafeteria.",18.0);
	delay(14*35);
	PlaySound(0,"radiostatic",6,1.0,0,ATTN_STATIC);
}

//Map03: Message 3
Script 507(void)
{
	hintmessage("MAP3VOX3","Go all the way to the rear of Supply Room D-301, \nand find a duct that will take you back to Sector C.",11.0);
	delay(10*35);
	PlaySound(0,"radiostatic",6,1.0,0,ATTN_STATIC);
}

//Map04: Message 1
Script 508(void)
{
	hintmessage("MAP4VOX1","We just intercepted a Security Bulletin. \n\nDr. Zimmerman is being held in the Secure Holding Facility \nin the North-Eastern quadrant of this sector.",12.0);
	delay(10*35);
	PlaySound(0,"radiostatic",6,1.0,0,ATTN_STATIC);
}

//Map04: Message 2
Script 509(void)
{
	hintmessage("MAP4VOX2","Because of the emergency, the security systems have \nautomatically electrified the gate and the perimeter fence. \n\nTo safely access the gate you'll need to switch off auxiliary power. \n\nYou'll need to get to the Turbine Control Room \nin the Western part of this sector.",15.0);
	delay(15*35);
	PlaySound(0,"radiostatic",6,1.0,0,ATTN_STATIC);
}

//Map04: Message 3
Script 510(void)
{
	hintmessage("MAP4VOX3","Gate Control at the Secure Holding Facility has been restored. \n\nReturn to the Guard tower, reachable through the Storage Warehouse \nin the Eastern quadrant of this sector.",13.0);
	delay(10*35);
	PlaySound(0,"radiostatic",6,1.0,0,ATTN_STATIC);
}

//Map08: Message 1
Script 511(void)
{
	hintmessage("MAP8VOX1","You will probably find Dr. Zimmerman in \nthe sub-basement level of the Holding Facility.",7.0);
	delay(8*35);
	PlaySound(0,"radiostatic",6,1.0,0,ATTN_STATIC);
}

//Map05: Message 1
Script 512(void)
{
	hintmessage("MAP5VOX1","There's a drainage tunnel near the dam \nthat will take you to the Research Labs.",5.0);
	delay(6*35);
	PlaySound(0,"radiostatic",6,1.0,0,ATTN_STATIC);
}

//Map05: Message 2
Script 513(void)
{
	hintmessage("MAP5VOX2","Look for Sergeant Harrison, the Security Officer. \nHe'll restore your security clearance. \n\nYou'll find him in the Office Block at the North-Western quadrant \nof this sector. Take the bridge over the storage warehouse.",15.0);
	delay(13*35);
	PlaySound(0,"radiostatic",6,1.0,0,ATTN_STATIC);
}

//Map05: Message 3
Script 514(void)
{
	hintmessage("MAP5VOX3","Return to the Research Labs and use your \nsecurity clearance to gain access. \n\nTake the bridge over the storage warehouse.",10.0);
	delay(8*35);
	PlaySound(0,"radiostatic",6,1.0,0,ATTN_STATIC);
}

//Map06: Message 1
Script 515(void)
{
	hintmessage("MAP6VOX1","You should be able to crawl under the door.",4.0);
	delay(5*35);
	PlaySound(0,"radiostatic",6,1.0,0,ATTN_STATIC);
}

//Map06: Message 2
Script 516(void)
{
	hintmessage("MAP6VOX2","This is a timed switch that will temporarily \nraise the gate to the next reservoir chamber.",8.0);
	delay(7*35);
	PlaySound(0,"radiostatic",6,1.0,0,ATTN_STATIC);
}

//Map07: Message 1
Script 517(void)
{
	hintmessage("MAP7VOX1","Keep pressing the switch to fry that sucker.",5.0);
	delay(5*35);
	PlaySound(0,"radiostatic",6,1.0,0,ATTN_STATIC);
}

//Map07: Message 2
Script 518(void)
{
	hintmessage("MAP7VOX2","Use the terminal to upload the virus. \n\nWe have remotely disabled the critical security protocols.",8.0);
	delay(8*35);
	PlaySound(0,"radiostatic",6,1.0,0,ATTN_STATIC);
}

//Script 519 & MessageItem19 already assigned to Map04

//////////////////////////////////////
//Script 872: Osprey body/rotors	//
//////////////////////////////////////

int PartOffset[2][3]={{340.0,0,0.25},{342.0,0,-0.25}};

script 872 (void)
{
	Thing_ChangeTID(0,1000);
	for(int i=0;i<2;i++)
	{
		int a = (GetActorAngle(0) + PartOffset[i][2] + 1.0) % 1.0;
		Spawn("OspreyBlade",
		GetActorX(0) + FixedMul(cos(a), PartOffset[i][0]),
		GetActorY(0) + FixedMul(sin(a), PartOffset[i][0]),
		GetActorZ(0) + PartOffset[i][1],
		1000 + i + 1,GetActorAngle(0) >> 8);
	}
}

//Recoil
script 869 (int climb, int twist)
{
	int playerpitch = GetActorPitch(0) -(climb); // ((random(1,3)+5)*climb);
	if(playerpitch > -5780)
		SetActorPitch (0, playerpitch);
	int playerangle = GetActorAngle(0) - ((random(1,2)+4)*twist);
	SetActorAngle (0, playerangle);
}

script "AltHudAmmo" ENTER
{
	str heldtype="";
	if(CheckWeapon("Beretta"))
		heldtype="PistolHeldAmmo";
	else if(CheckWeapon("Python"))
		heldtype="MagnumHeldAmmo";
	else if(CheckWeapon("Pshotgun"))
		heldtype="ShotgunHeldAmmo";
	else if(CheckWeapon("ARifle"))
		heldtype="M16HeldAmmo";
	if(StrCmp(heldtype,"")&&GetCVar("screenblocks")==11&&GetCVar("hud_althud"))
	{
		setfont("CONFONT");
		HudMessage(d:CheckInventory(heldtype);HUDMSG_PLAIN, 3, CR_RED, 0.9, 1.0, 0.35);
	}
	delay(1);
	restart;
}

script "M16Ammo" ENTER
{
	if(CheckInventory("M16ClipGren")!=(CheckInventory("M16HeldAmmo")+CheckInventory("M16Gren")))
	{
		TakeInventory("M16ClipGren",70);
		GiveInventory("M16ClipGren",(CheckInventory("M16HeldAmmo")+CheckInventory("M16Gren")));
	}
	Delay(1);
	Restart;
}

//STEAM
script 770(int size,int pitch,int plane)
{
	int momentum;
	int angle=GetActorAngle(0)+random(-1024,1024);
	pitch+=random(-4,4);
	pitch<<=8;
	switch(plane)
	{
	case 0:
		momentum=FixedMul(cos(GetActorAngle(0)),FixedMul(cos(pitch),random(30.0,35.0)));
		break;
	case 1:
		momentum=FixedMul(sin(GetActorAngle(0)),FixedMul(cos(Pitch),random(30.0,35.0)));
		break;
	case 2:
		momentum=FixedMul(-sin(pitch),random(30.0,35.0));
		break;
	}
	SetResultValue(momentum*(size+1)/5>>16);
}

//////////////////////////////
// Script 444: Waterfall	//
//////////////////////////////

str WFallParticles[10] =
{
	"WFallParticle1A","WFallParticle1B",
	"WFallParticle2A","WFallParticle2B",
	"WFallParticle3A","WFallParticle3B",
	"WFallParticle4A","WFallParticle4B",
	"WFallParticle5A","WFallParticle5B"
};

script 444 (int size)
{
	for(int r=0;r<size<<16;r+=random(4.0,8.0))
	{
		Spawn(WFallParticles[random(0,9)],
		GetActorX(0)+random(-8.0,8.0)+FixedMul(cos(GetActorAngle(0)),r),
		GetActorY(0)+random(-8.0,8.0)+FixedMul(sin(GetActorAngle(0)),r),
		GetActorZ(0)+random(-8.0,8.0),
		0,GetActorAngle(0)>>8);
	}
}

//Sets up behavior for Barney to follow player
function int GetTargetAngle(int tid1,int tid2)
{
	return VectorAngle(GetActorX(tid2) - GetActorX(tid1),GetActorY(tid2) - GetActorY(tid1));
}
function int distance(int tid1,int tid2)
{
	int x,y,z,a,l;
	x = GetActorX(tid1) - GetActorX(tid2);
	y = GetActorY(tid1) - GetActorY(tid2);
	z = GetActorZ(tid1) - GetActorZ(tid2);
	a = VectorAngle(x,y);
	if((a + 0.125) % 0.5 > 0.25)
		l = FixedDiv(sin(a),y);
	else
		l = FixedDiv(cos(a),x);
	a = VectorAngle(l,z);
	if((a + 0.125) % 0.5 > 0.25)
		return FixedDiv(sin(a),z);
	return FixedDiv(cos(a),l);
}
function void fadetobold(int a,int b,int c,int d,int e)
{
	for(int i=0;i<PlayerCount();i++)
	{
		SetActivator(0,AAPTR_PLAYER1>>i);
		FadeTo(a,b,c,d,e);
	}
}
function void GiveInventoryBold(str item,int amt)
{
	SetActivator(0,AAPTR_NULL);
	GiveInventory(item,amt);
}
function void TakeInventoryBold(str item,int amt)
{
	SetActivator(0,AAPTR_NULL);
	TakeInventory(item,amt);
}
function int medstation(int uses,int tex)
{
	if(GetActorProperty(0,APROP_Health)>=100) // Check health first.
		return 0;
	else if(uses>4)
	{
		ActivatorSound("MEDCHARGEUSED",127);
		return 0;
	}
	HealThing(10);
	ActivatorSound("MEDCHARGE",127);
	if(uses==4)
	{
		setlinetexture(tex,SIDE_FRONT,TEXTURE_TOP,"XMEDIC02");
		setlinetexture(tex,SIDE_FRONT,TEXTURE_BOTTOM,"XMEDIC02");
	}
	return 1;
}
function int armorstation(int uses,int tex)
{
	if(CheckInventory("Armor")>=100)
		return 0;
	else if(uses>4)
	{
		ActivatorSound("HEVCHARGEUSED",127);
		return 0;
	}
	GiveInventory("HEVCharge",10);
	ActivatorSound("HEVCHARGE",127);
	if(uses==4)
	{
		setlinetexture(tex,SIDE_FRONT,TEXTURE_TOP,"XARMOR02");
		setlinetexture(tex,SIDE_FRONT,TEXTURE_BOTTOM,"XARMOR02");
	}
	return 1;
}

function void SpawnSpotTelefog(str classname,int spottid,int tid,int angle)
{
	SpawnSpot(classname,spottid,tid,angle);
	SpawnSpot("TeleportFog",spottid,tid,angle);
}