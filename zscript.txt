version "2.5"

enum ParanoidEnum
{
	HLSMOOTHCHASE=CHF_NOPLAYACTIVE+CHF_NORANDOMTURN+CHF_STOPIFBLOCKED
}

#include "Paranoid/statbar.txt"

#include "Paranoid/Base.txt"
#include "Paranoid/Bubbles.txt"
#include "Paranoid/Explosion.txt"
#include "Paranoid/Flames.txt"
#include "Paranoid/freezeritem.txt"
#include "Paranoid/Messages.txt"
#include "Paranoid/Miscellaneous.txt"
#include "Paranoid/Pickups.txt"
#include "Paranoid/Player.txt"
#include "Paranoid/Sparks.txt"
#include "Paranoid/Steam.txt"
#include "Paranoid/WaterFall.txt"
#include "Paranoid/WeaponsAmmo.txt"

#include "Paranoid/Barney.txt"
#include "Paranoid/Scientists.txt"

#include "Paranoid/Barnacle.txt"
#include "Paranoid/BullSquid.txt"
#include "Paranoid/Controller.txt"
#include "Paranoid/Gargantua.txt"
#include "Paranoid/Gonarch.txt"
#include "Paranoid/Grunts.txt"
#include "Paranoid/HeadCrab.txt"
#include "Paranoid/HornetGrunt.txt"
#include "Paranoid/HoundEye.txt"
#include "Paranoid/Nihilanth.txt"
#include "Paranoid/StukaBat.txt"
#include "Paranoid/Vortigaunt.txt"
#include "Paranoid/Zombie.txt"

#include "Paranoid/Models.txt"
#include "Paranoid/Vehicles.txt"
#include "Paranoid/XenItems.txt"

#include "Paranoid/Expansion.txt"

class ParanoidEventHandler : EventHandler
{
	override void WorldLoaded(WorldEvent e)
	{
		Actor mo,cam;
		name hintman;
		ActorIterator iter=ActorIterator.Create(219);
		mo=iter.Next();
		if(mo==null)
			return;
		double camx=mo.pos.x,camy=mo.pos.y,camz=mo.pos.z;
		if(level.levelnum>=1&&level.levelnum<=8)
		{
			mo.AddZ(-0.5,0);
			TexMan.SetCameraToTexture(mo,"HINTMAN",80);
			hintman='HintManCam';
		}
		else if(level.levelnum>=10&&level.levelnum<=17)
		{
			mo.AddZ(-4.0,0);
			TexMan.SetCameraToTexture(mo,"STINSON",80);
			hintman='Stinson';
		}
		else
			return;
		cam=Actor.Spawn(hintman,(camx-1.0,camy+5.0,camz-56.0));
		cam.Angle=270.0;
	}
}
class ParanoidStaticEventHandler : StaticEventHandler
{
	override void WorldTick()
	{
		if(level.mapname=="TITLEMAP")
			return;
		for(int i=0;i<MAXPLAYERS;i++)
		{
			if(playeringame[i])
			{
				let me=players[i].mo;
				int should=me.CountInv("HLAssaultRifleMag")+me.CountInv("HLGrenadeLauncherAmmo");
				if(me.CountInv("HLAssaultRifleMagEx")!=should)
					me.SetInventory("HLAssaultRifleMagEx",should);
			}
		}
	}
	override void PlayerEntered(PlayerEvent e)
	{
		RolfBellmer me;
		me=RolfBellmer(players[e.PlayerNumber].mo);
		if(me==null)
			return;
		if(level.LevelName=='Otis Shift')
		{
			me.A_GiveInventory("HLDesertEagle");
			me.A_GiveInventory("HLDesertEagleMag",7);
			me.A_GiveInventory("HLMagnumAmmo",14);
			me.A_TakeInventory("HLCrowbar");
			me.A_TakeInventory("BasicArmor");
			me.otis=1;
		}
	}
    override void WorldThingDied(WorldEvent e)
	{
		let mon=e.Thing;
		if(!mon.bISMONSTER||mon.bFRIENDLY||!mon.target)
			return;
		RolfBellmer me;
		me=RolfBellmer(mon.target);
		if(me==null||!me.otis)
			return;
		if(!random(0,3))
			mon.target.A_PlaySound("otistaunt",CHAN_VOICE);
	}
}