class Bubble1 : Actor
{
	Default
	{
		height 2;
		radius 1;
		PROJECTILE;
		+FORCEXYBILLBOARD
		renderstyle "translucent";
		xscale .075;
		yscale .05625;
		alpha .75;
	}
	states
	{
	Spawn:
		BUBL A 0 NODELAY ThrustThingZ(0,random(8,12),0,0);
		BUBL A 1
		{
			if(waterlevel==0)
				return resolvestate("Death");
			angle+=45;
			float r=frandom(0.0,1.0);
			SetOrigin((pos.x+(cos(angle)*r),pos.y+(sin(angle)*r),pos.z),1);
			return state(null);
		}
		Wait;
	Death:
		BUBL A 0 A_Stop;
		BUBL A 1 A_FadeOut(.25);
		Wait;
	}
}

class Bubble2 : Bubble1
{
	Default
	{
		xscale .0625;
		yscale .05625;
	}
}
class Bubble3 : Bubble1
{
	Default
	{
		xscale .05;
		yscale .05;
	}
}
class Bubble4 : Bubble1
{
	Default
	{
		xscale .0375;
		yscale .0375;
	}
}
class Bubble5 : Bubble1
{
	Default
	{
		xscale .025;
		yscale .025;
	}
}

class OMGBubbles : SwitchableDecoration
{
	static const class<Actor> Bubble[]={"Bubble1","Bubble2","Bubble3","Bubble4","Bubble5"};
	Default
	{
		+NOCLIP
		+NOGRAVITY
		+NOBLOCKMAP
	}
	states
	{
	Spawn:
	Active:
		TNT1 A 0 NODELAY A_CheckSightOrRange(2560,"IdleNoSee");
		TNT1 A 1
		{
			float area=args[0]+random(0,8);
			int intensity=args[1]+1;
			int shape=args[2];
			if(shape!=2)
				area/=2;
			actor bub;
			switch(shape)
			{
			case 0:	//square
				for(int i=0;i<intensity;i++)
					bub=Spawn(Bubble[random(0,4)],(pos.x+frandom(-area,area),pos.y+frandom(-area,area),pos.z));
				break;
			case 1:	//circle
				float a=frandom(0.0,1.0);
				for(int i=0;i<intensity;i++)
				{
					float r=frandom(0,area);
					bub=Spawn(Bubble[random(0,4)],(pos.x+(cos(a)*r),pos.y+(sin(a)*r),pos.z));
				}
				break;
			case 2:	//line
				for(int i=0;i<intensity;i++)
				{
					float r=frandom(0,area);
					bub=Spawn(Bubble[random(0,4)],(pos.x+(cos(angle)*r),pos.y+(sin(angle)*r),pos.z));
				}
				break;
			}
			bub.angle=random(0,359);
		}
		loop;
	Inactive:
		TNT1 A -1;
		stop;
	IdleNoSee:
		TNT1 A 10;
		TNT1 A 0 A_CheckSightOrRange(2560,"IdleNoSee");
		goto Active;
	}
}