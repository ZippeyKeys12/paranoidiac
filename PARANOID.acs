#library "PARANOID"
#include "zcommon.acs"

script "AltHudAmmo" ENTER
{
	str heldtype="";
	if(CheckWeapon("Beretta"))
		heldtype="PistolHeldAmmo";
	else if(CheckWeapon("Python"))
		heldtype="MagnumHeldAmmo";
	else if(CheckWeapon("Pshotgun"))
		heldtype="ShotgunHeldAmmo";
	else if(CheckWeapon("ARifle"))
		heldtype="M16HeldAmmo";
	if(StrCmp(heldtype,"")&&GetCVar("screenblocks")==11&&GetCVar("hud_althud"))
	{
		setfont("CONFONT");
		HudMessage(d:CheckInventory(heldtype);HUDMSG_PLAIN,3,CR_RED,0.9,1.0,0.35);
	}
	delay(1);
	restart;
}

script "MedStation"(int uses,int tex)
	{SetResultValue(station(uses,tex,1));}
script "ArmorStation"(int uses,int tex)
	{SetResultValue(station(uses,tex,2));}
function int station(int uses,str tex,int type)
{
	int checkvalue=GetActorProperty(0,APROP_Health);
	str snd1="MEDCHARGE",snd2="MEDCHARGEUSED",texture="XMEDIC02";
	if(type==2)
	{
		checkvalue=CheckInventory("Armor");
		snd1="HEVCHARGE";
		snd2="HEVCHARGEUSED";
		texture="XARMOR02";
	}
	if(checkvalue>=100)
		return 0;
	else if(uses>4)
	{
		ActivatorSound(snd2,127);
		return 0;
	}
	ActivatorSound(snd1,127);
	if(type==2)
		GiveInventory("HEVCharge",10);
	else
		HealThing(10);
	if(uses==4)
	{
		setlinetexture(tex,SIDE_FRONT,TEXTURE_TOP,texture);
		setlinetexture(tex,SIDE_FRONT,TEXTURE_BOTTOM,texture);
	}
	return 1;
}

//Hint messages that are run when player uses the inventory item "MessageItem**"
str hintsnd[32][2]=
{
	{"MAP2VOX1","HINTMAN"},
	{"MAP2VOX2","HINTMAN"},
	{"MAP2VOX3","HINTMAN"},
	{"MAP2VOX4","HINTMAN"},
	{"MAP3VOX1","HINTMAN"},
	{"MAP3VOX2","HINTMAN"},
	{"MAP3VOX3","HINTMAN"},
	{"MAP4VOX1","HINTMAN"},
	{"MAP4VOX2","HINTMAN"},
	{"MAP4VOX3","HINTMAN"},
	{"MAP8VOX1","HINTMAN"},
	{"MAP5VOX1","HINTMAN"},
	{"MAP5VOX2","HINTMAN"},
	{"MAP5VOX3","HINTMAN"},
	{"MAP6VOX1","HINTMAN"},
	{"MAP6VOX2","HINTMAN"},
	{"MAP7VOX1","HINTMAN"},
	{"MAP7VOX2","HINTMAN"},
	{"",""},
	{"MAP10VX1","STINSON"},
	{"MAP11VX1","STINSON"},
	{"MAP12VX1","STINSON"},
	{"MAP12VX2","UNDERNET"},
	{"MAP13VX1","STINSON"},
	{"MAP13VX2","UNDERNET"},
	{"MAP14VX1","STINSON"},
	{"MAP14VX2","STINSON"},
	{"MAP15VX1","STINSON"},
	{"MAP16VX1","STINSON"},
	{"MAP16VX2","UNDERNET"},
	{"MAP16VX3","STINSON"},
	{"MAP17VX1","STINSON"}
};
int delays[32][2]=
{
	{8,0},{6,0},{7,0},{9,0},{16,0},
	{14,0},{10,0},{10,0},{15,0},{10,0},
	{8,0},{6,0},{13,0},{8,0},{5,0},
	{7,0},{5,0},{8,0},{0,0},{42,4.6},
	{18,2.1},{32,2.65},{39,3.25},{29,2.01},{38,3.21},
	{13,2.94},{27,1.3},{18,1.2},{21,1.0},{29,2.3},
	{24,2.6},{16,1.7}
};
function void hintmessage(str message,str icon,int holdtime,int holdtime2)
{
	PlaySound(0,"radiostatic",6,1.0,0,ATTN_STATIC,1);
	PlaySound(0,message,7,1.0,0,ATTN_STATIC,1);
	SetHUDSize(640,480,1);
	SetFont(icon);
	HUDMessage(s:"A";HUDMSG_PLAIN,1,CR_UNTRANSLATED,0.1,30.1,holdtime);
	SetFont("smallfont");
	if(holdtime2)
		HUDMessage(l:message;HUDMSG_TYPEON|HUDMSG_LOG,2,CR_GOLD,80.1,30.1,holdtime2,0.062,0.05);
	else
		HUDMessage(l:message;HUDMSG_PLAIN|HUDMSG_LOG,2,CR_GOLD,80.1,30.1,holdtime);
}
script "HintMessage"(int message)
{
	hintmessage(hintsnd[message-1][0],hintsnd[message-1][1],delays[message-1][0]*1.0,delays[message-1][1]);
	delay(delays[message-1][0]*35);
	PlaySound(0,"radiostatic",6,1.0,0,ATTN_STATIC,1);
}